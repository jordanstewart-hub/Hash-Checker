import hashlib
import argparse


def calculate_hash(filepath, algo):
    hash_func = getattr(hashlib, algo)()
    with open(filepath, 'rb') as f:
        for chunk in iter(lambda: f.read(4096), b""):
            hash_func.update(chunk)
    return hash_func.hexdigest()


def main():
    parser = argparse.ArgumentParser(description="File Hash Checker")
    parser.add_argument('--file', required=True, help='Path to file')
    parser.add_argument('--hash', required=True, help='Expected hash')
    parser.add_argument('--algo', required=True, choices=['md5', 'sha1', 'sha256'], help='Hash algorithm to use')
    args = parser.parse_args()

    computed_hash = calculate_hash(args.file, args.algo)
    print(f"Computed {args.algo} hash: {computed_hash}")
    if computed_hash.lower() == args.hash.lower():
        print("✅ Hash match: File integrity verified.")
    else:
        print("❌ Hash mismatch: File may be altered.")


if __name__ == '__main__':
    main()
